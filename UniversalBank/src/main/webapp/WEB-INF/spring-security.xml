<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<!-- Permit all -->
        <intercept-url pattern="/index*" access="permitAll" />

		<!-- Permit Manager -->
		<intercept-url pattern="/manager*" access="hasRole('ROLE_MANAGER')" />
		
		<!-- Permit Reg. Employee -->

		<access-denied-handler error-page="/403" />
		<form-login login-page="/index"
			authentication-success-handler-ref="mySuccessHandler"
			authentication-failure-url="/index?error" username-parameter="userName"
			password-parameter="password" />
		<logout logout-success-url="/index?logout" />
		<!-- enable csrf protection -->
		<csrf />

		<session-management>
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="true" />
		</session-management>
	</http>

	<beans:bean id="mySuccessHandler"
		class="edu.asu.ss2015.group4.handler.SuccessfulLoginHandler" />

	<beans:bean id="customUserDetailsService"
		class="edu.asu.ss2015.group4.service.CustomUserDetailService">
		<beans:property name="usersByUsernameQuery"
			value="select * from users where username = ?" />
		<beans:property name="authoritiesByUsernameQuery"
			value="select username, role from user_roles where username =?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean id="userDAO"
		class="edu.asu.ss2015.group4.dao.impl.UserDAOImpl">
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>
	
	<beans:bean id="authenticationProvider"
		class="edu.asu.ss2015.group4.handler.LoginAuthenticationHandler">
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
		<beans:property name="userDAO" ref="userDAO" />
		<beans:property name="passwordEncoder" ref="encoder" />
	</beans:bean>

	<authentication-manager>
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>

</beans:beans>